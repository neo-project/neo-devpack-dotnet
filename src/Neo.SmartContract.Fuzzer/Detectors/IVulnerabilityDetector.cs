using Neo.SmartContract.Fuzzer.SymbolicExecution;
using Neo.SmartContract.Fuzzer.SymbolicExecution.Types;
using Neo.VM;
using System.Collections.Generic;

namespace Neo.SmartContract.Fuzzer.Detectors
{
    /// <summary>
    /// Interface for classes that detect potential vulnerabilities in final symbolic states.
    /// </summary>
    public interface IVulnerabilityDetector
    {
        /// <summary>
        /// Detects vulnerabilities in a given symbolic execution state.
        /// </summary>
        /// <param name="state">The final symbolic state to analyze.</param>
        /// <param name="haltReason">The reason why the execution halted.</param>
        /// <returns>A collection of detected vulnerabilities.</returns>
        IEnumerable<VulnerabilityRecord> Detect(SymbolicState state, VMState haltReason);
    }
}
